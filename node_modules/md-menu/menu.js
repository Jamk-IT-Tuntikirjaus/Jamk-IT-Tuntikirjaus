"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var core_1 = require('@angular/core');
var common_1 = require('@angular/common');
var MdMenuNotClosable = (function () {
    function MdMenuNotClosable(elementRef) {
        this.elementRef = elementRef;
    }
    /**
     * contains
     * @param element
     */
    MdMenuNotClosable.prototype.contains = function (element) {
        var thisElement = this.elementRef.nativeElement;
        return thisElement.contains(element);
    };
    MdMenuNotClosable = __decorate([
        core_1.Directive({ selector: '[md-menu-not-closable]' }), 
        __metadata('design:paramtypes', [core_1.ElementRef])
    ], MdMenuNotClosable);
    return MdMenuNotClosable;
}());
exports.MdMenuNotClosable = MdMenuNotClosable;
var MdMenu = (function () {
    function MdMenu(elementRef) {
        this.elementRef = elementRef;
        this.isVisible = false;
    }
    /**
     * open menu
     */
    MdMenu.prototype.open = function () { this.isVisible = true; };
    /**
     * close menu
     */
    MdMenu.prototype.close = function () { this.isVisible = false; };
    /**
     * check closeble
     * @param element
     */
    MdMenu.prototype.isInClosableZone = function (element) {
        if (!this.notClosable) {
            return false;
        }
        return this.notClosable.contains(element);
    };
    __decorate([
        core_1.ContentChild(MdMenuNotClosable), 
        __metadata('design:type', MdMenuNotClosable)
    ], MdMenu.prototype, "notClosable", void 0);
    MdMenu = __decorate([
        core_1.Directive({
            selector: '[md-menu]',
            host: {
                'role': 'menu',
                '[class.md-menu]': 'true',
                '[class.open]': 'isVisible'
            }
        }), 
        __metadata('design:paramtypes', [core_1.ElementRef])
    ], MdMenu);
    return MdMenu;
}());
exports.MdMenu = MdMenu;
var MdMenuOpen = (function () {
    function MdMenuOpen(menu, elementRef) {
        var _this = this;
        this.menu = menu;
        this.elementRef = elementRef;
        this.close = function (event) {
            if (!_this.menu.isInClosableZone(event.target) &&
                event.target !== _this.elementRef.nativeElement) {
                _this.menu.close();
                document.removeEventListener('click', _this.close);
            }
        };
    }
    MdMenuOpen.prototype.open = function () {
        this.menu.open();
        document.addEventListener('click', this.close, true);
    };
    MdMenuOpen.prototype.ngOnDestroy = function () {
        document.removeEventListener('click', this.close);
    };
    __decorate([
        core_1.HostListener('click'), 
        __metadata('design:type', Function), 
        __metadata('design:paramtypes', []), 
        __metadata('design:returntype', void 0)
    ], MdMenuOpen.prototype, "open", null);
    MdMenuOpen = __decorate([
        core_1.Directive({ selector: '[md-menu-open]' }),
        __param(0, core_1.Host()), 
        __metadata('design:paramtypes', [MdMenu, core_1.ElementRef])
    ], MdMenuOpen);
    return MdMenuOpen;
}());
exports.MdMenuOpen = MdMenuOpen;
exports.MD_MENU_DIRECTIVES = [MdMenuNotClosable, MdMenu, MdMenuOpen];
var MdMenuModule = (function () {
    function MdMenuModule() {
    }
    MdMenuModule = __decorate([
        core_1.NgModule({
            imports: [common_1.CommonModule],
            exports: exports.MD_MENU_DIRECTIVES,
            declarations: exports.MD_MENU_DIRECTIVES,
        }), 
        __metadata('design:paramtypes', [])
    ], MdMenuModule);
    return MdMenuModule;
}());
exports.MdMenuModule = MdMenuModule;

//# sourceMappingURL=menu.js.map
