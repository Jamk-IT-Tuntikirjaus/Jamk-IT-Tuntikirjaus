{"version":3,"sources":["md-menu/menu.ts"],"names":[],"mappings":"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","file":"md-menu/menu.js","sourcesContent":["import {\n  ContentChild,\n  Directive,\n  ElementRef,\n  Host,\n  HostListener,\n  OnDestroy,\n  NgModule\n} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\n@Directive({ selector: '[md-menu-not-closable]' })\nexport class MdMenuNotClosable {\n\n  constructor(private elementRef: ElementRef) { }\n\n  /**\n   * contains\n   * @param element\n   */\n  public contains(element: HTMLElement) {\n    let thisElement: HTMLElement = this.elementRef.nativeElement;\n    return thisElement.contains(element);\n  }\n}\n\n@Directive({\n  selector: '[md-menu]',\n  host: {\n    'role': 'menu',\n    '[class.md-menu]': 'true',\n    '[class.open]': 'isVisible'\n  }\n})\nexport class MdMenu {\n\n  private isVisible: boolean = false;\n\n  @ContentChild(MdMenuNotClosable) notClosable: MdMenuNotClosable;\n\n  constructor(private elementRef: ElementRef) { }\n\n  /**\n   * open menu\n   */\n  public open() { this.isVisible = true; }\n\n  /**\n   * close menu\n   */\n  public close() { this.isVisible = false; }\n\n  /**\n   * check closeble\n   * @param element\n   */\n  isInClosableZone(element: HTMLElement) {\n    if (!this.notClosable) { return false; }\n    return this.notClosable.contains(element);\n  }\n\n}\n\n@Directive({ selector: '[md-menu-open]' })\nexport class MdMenuOpen implements OnDestroy {\n\n  private close = (event: MouseEvent) => {\n    if (!this.menu.isInClosableZone(<HTMLElement>event.target) &&\n      event.target !== this.elementRef.nativeElement) {\n      this.menu.close();\n      document.removeEventListener('click', this.close);\n    }\n  };\n\n  constructor( @Host() private menu: MdMenu, private elementRef: ElementRef) { }\n\n  @HostListener('click')\n  private open() {\n    this.menu.open();\n    document.addEventListener('click', this.close, true);\n  }\n\n  ngOnDestroy() {\n    document.removeEventListener('click', this.close);\n  }\n\n}\n\nexport const MD_MENU_DIRECTIVES: any[] = [MdMenuNotClosable, MdMenu, MdMenuOpen];\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  exports: MD_MENU_DIRECTIVES,\r\n  declarations: MD_MENU_DIRECTIVES,\r\n})\r\nexport class MdMenuModule { }\r\n"],"sourceRoot":"/source/"}